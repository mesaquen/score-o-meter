html,
body,
.app {
  margin: 0;
  color: var(--text);
  height: 100%;
  background: var(--bg);
  font-family: sans-serif;
  transition: all 0.3s;
}

:root {
  --container-height: 3rem;
  --bg: white;
  --bg-hover: #ddd;
  --primary: orange;
  --text: #444;
  --button: #22d10a;
}

[data-theme='dark'] {
  --bg: #222;
  --bg-hover: #444;
  --primary: cyan;
  --text: white;
  --button: green;
}

@media (width >= 768px) {
  :root {
    --container-height: 8rem;
  }
}

@keyframes visible {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes unvisible {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    color: var(--primary);
    opacity: 0.3;
    transform: translate(-50%, var(--container-height));
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  to {
    opacity: 0;
    transform: translate(-50%, calc(-1 * var(--container-height)));
  }
}

@keyframes buttonReveal {
  0% {
    width: 48px;
    height: 48px;
    transform: translateX(50%) scale(0);
  }
  35% {
    width: 48px;
    height: 48px;
    transform: translateX(50%) scale(1);
  }
  100% {
    width: 120px;
    height: 48px;
    transform: translateX(50%);
  }
}

@keyframes buttonHide {
  0% {
    width: 120px;
    height: 48px;
    transform: translateX(50%);
  }
  35% {
    width: 48px;
    height: 48px;
    transform: translateX(50%) scale(1);
  }
  100% {
    width: 48px;
    height: 48px;
    transform: translateX(50%) scale(0);
  }
}

* {
  outline: none;
  user-select: none;
  box-sizing: border-box;
}

.hidden {
  display: none;
}

.settings {
  padding: 1rem;
  position: absolute;
  top: 0;
  color: var(--text);
}

.settings-button {
  font-size: 2rem;
  cursor: pointer;
  opacity: 0.3;
}
.settings-button:hover {
  opacity: 1;
}

.container {
  position: relative;
  height: 100%;
  display: flex;
  transition: all 0.5s ease;
}

.blur {
  filter: blur(0.5rem);
}

.previous {
  position: absolute;
  animation: fadeOut 0.3s;
  animation-fill-mode: forwards;
}

.current {
  position: absolute;
  animation: fadeIn 0.3s;
}

.counter {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: 1;
  position: relative;
}

.counter:hover {
  background: var(--bg-hover);
}

.score-container {
  margin-bottom: 1rem;
  position: relative;
  height: 8rem;
  width: 8rem;
  line-height: 0;
}

.score {
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: 8rem;
  transform: translate(-50%, 0);
}

.player {
  text-align: center;
  position: absolute;
  bottom: 50%;
  transform: translateY(calc(-1 * var(--container-height) * 2));
  display: flex;
  word-wrap: break-word;
  animation: visible 0.4s;
  animation-delay: 0.3s;
  animation-fill-mode: backwards;
  font-size: 3em;
}

@media (width < 768px) {
  .score {
    font-size: 3.5rem;
  }

  .player {
    font-size: 1.6rem;
  }
}

.button {
  cursor: pointer;
  position: absolute;
  display: flex;
  bottom: 2rem;
  right: 50%;
  overflow: hidden;
  background: var(--button);
  width: 0px;
  height: 0px;
  align-items: center;
  justify-content: center;
  border-radius: 24px;

  transform: translateX(50%);
  -webkit-tap-highlight-color: transparent;
}

.button span {
  text-transform: uppercase;
  font-weight: 600;
}

.show-restart {
  display: flex;
  transform: translateX(50%);
  animation: buttonReveal 0.5s forwards;
}

.show-restart span {
  animation: visible 0.3s;
  animation-fill-mode: backwards;
  animation-delay: 0.5s;
}

.hide-restart {
  display: flex;
  transform: translateX(50%);
  animation: buttonHide 0.5s;
  animation-fill-mode: backwards;
}

.hide-restart span {
  animation: unvisible 0.3s;
  animation-fill-mode: forwards;
}

.modal {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.1);
}

.modal-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20rem;
  min-height: 5rem;
  background: var(--bg);
  transform: translate(-50%, -50%);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.5);
}

.modal-container h1 {
  padding: 0;
  margin: 0;
}

.setting-row {
  align-items: center;
  display: flex;
}

.setting-row span {
  margin-right: 1rem;
}

.dark-mode-checkbox {
  cursor: pointer;
  display: inline;
  width: 0.75rem;
  height: 0.75rem;
  border: 1px solid var(--text);
  box-shadow: inset 0 0 0 2px var(--bg);
  background: none;
}

.fill {
  background: var(--primary);
}
